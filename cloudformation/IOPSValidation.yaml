AWSTemplateFormatVersion: "2010-09-09"
Description: NHS Digital IOPS FHIR Services

Parameters:
  OntoClientId:
    Description: "Ontology Server Client ID"
    Type: "String"
    Default: "1234"
  OntoClientSecret:
    Description: "Ontology Server Client Secret"
    Type: "String"
    Default: "5678"

Resources:
  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: "fhir-r4"
      CapacityProviders:
        - "FARGATE"
        - "FARGATE_SPOT"


  ECSTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: "terminology.url"
              Value: "https://ontology.nhs.uk/authoring/fhir/"
            - Name: "terminology.authorization.clientId"
              Value: !Ref OntoClientId
            - Name: "terminology.authorization.clientSecret"
              Value: !Ref OntoClientSecret
            - Name: "terminology.authorization.tokenUrl"
              Value: "https://ontology.nhs.uk/authorisation/auth/realms/nhs-digital-terminology/protocol/openid-connect/token"
          Essential: true
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/fhir-validator-r4:2.6.29"
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: "/ecs/iops-fhir-validation-service"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: "ecs"
          MemoryReservation: 2028
          Name: "fhir-validator-container"
          PortMappings:
            - ContainerPort: 9001
              HostPort: 9001
              Protocol: "tcp"
      Family: "fhir-validation-task"
      ExecutionRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole"
      NetworkMode: "awsvpc"
      RequiresCompatibilities:
        - "FARGATE"
      Cpu: "2048"
      Memory: "4096"

  ElasticLoadBalancingV2TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: "/FHIR/R4/metadata"
      Port: 9001
      Protocol: "HTTP"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      TargetType: "ip"
      Matcher:
        HttpCode: "200"
      HealthyThresholdCount: 3
      VpcId: "vpc-014d22eaa2ae874ab"
      Name: "tg-fhir-validator-r4"
      HealthCheckEnabled: true
      TargetGroupAttributes:
        - Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.count"
          Value: "1"
        - Key: "stickiness.enabled"
          Value: "false"
        - Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage"
          Value: "off"
        - Key: "deregistration_delay.timeout_seconds"
          Value: "300"
        - Key: "target_group_health.dns_failover.minimum_healthy_targets.count"
          Value: "1"
        - Key: "stickiness.app_cookie.cookie_name"
          Value: ""
        - Key: "stickiness.type"
          Value: "lb_cookie"
        - Key: "stickiness.lb_cookie.duration_seconds"
          Value: "86400"
        - Key: "slow_start.duration_seconds"
          Value: "0"
        - Key: "stickiness.app_cookie.duration_seconds"
          Value: "86400"
        - Key: "target_group_health.dns_failover.minimum_healthy_targets.percentage"
          Value: "off"
        - Key: "load_balancing.cross_zone.enabled"
          Value: "use_load_balancer_configuration"
        - Key: "load_balancing.algorithm.type"
          Value: "round_robin"


  ElasticLoadBalancingV2LoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: "lb-fhir-r4-validation"
      Scheme: "internet-facing"
      Type: "application"
      SecurityGroups:
        - "sg-006ea14846fb347de"
      Subnets:
        - "subnet-0d786d325c26ca068"
        - "subnet-0ffaa3af23683e8b1"
      IpAddressType: "ipv4"
      LoadBalancerAttributes:
        -
          Key: "access_logs.s3.enabled"
          Value: "false"
        -
          Key: "idle_timeout.timeout_seconds"
          Value: "60"
        -
          Key: "deletion_protection.enabled"
          Value: "false"
        -
          Key: "routing.http2.enabled"
          Value: "true"
        -
          Key: "routing.http.drop_invalid_header_fields.enabled"
          Value: "false"
        -
          Key: "routing.http.xff_client_port.enabled"
          Value: "false"
        -
          Key: "routing.http.preserve_host_header.enabled"
          Value: "false"
        -
          Key: "routing.http.xff_header_processing.mode"
          Value: "append"
        -
          Key: "load_balancing.cross_zone.enabled"
          Value: "true"
        -
          Key: "routing.http.desync_mitigation_mode"
          Value: "defensive"
        -
          Key: "waf.fail_open.enabled"
          Value: "false"
        -
          Key: "routing.http.x_amzn_tls_version_and_cipher_suite.enabled"
          Value: "false"

  ElasticLoadBalancingV2Listener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancer
      Port: 80
      Protocol: "HTTP"
      DefaultActions:
        -
          TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup
          Type: "forward"

  EC2SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "2022-09-29T14:48:50.863Z"
      GroupName: "svc-fh-2022"
      Tags:
        -
          Key: "Name"
          Value: "ecs-fargate-group"
      VpcId: "vpc-014d22eaa2ae874ab"
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          FromPort: 9001
          IpProtocol: "tcp"
          ToPort: 9001

  EC2SecurityGroup2:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "2022-09-29T12:20:12.903Z"
      GroupName: "svc-fh-2021"
      Tags:
        -
          Key: "Name"
          Value: "orginal-ecs-default"
      VpcId: "vpc-014d22eaa2ae874ab"
      SecurityGroupIngress:
        -
          CidrIp: "0.0.0.0/0"
          FromPort: 9001
          IpProtocol: "tcp"
          ToPort: 9001
      SecurityGroupEgress:
        -
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"

  ECSService:
    Type: "AWS::ECS::Service"
    Properties:
      ServiceName: "svc-fhir-validator"
      Cluster: !GetAtt ECSCluster.Arn
      LoadBalancers:
        - TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup
          ContainerName: "fhir-validator-container"
          ContainerPort: 9001
      DesiredCount: 1
      LaunchType: "FARGATE"
      PlatformVersion: "LATEST"
      TaskDefinition: !Ref ECSTaskDefinition
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: false
          Rollback: false
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "ENABLED"
          SecurityGroups:
            - !Ref EC2SecurityGroup
          Subnets:
            - "subnet-0d786d325c26ca068"
            - "subnet-0ffaa3af23683e8b1"
      HealthCheckGracePeriodSeconds: 20
      SchedulingStrategy: "REPLICA"
      DeploymentController:
        Type: "ECS"


