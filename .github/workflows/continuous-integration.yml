name: Build

on: push

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This causes all history to be fetched, which is required for calculate-version to function

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
  
      - name: Cache asdf
        uses: actions/cache@v4
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared 

      - name: Install python packages
        run: poetry install

      - name: Lint
        run: make lint

      - name: check licences
        run: make check-licences 

      - name: Build
        run: make build

      - name: Set SPEC_VERSION env var
        run: echo "SPEC_VERSION=$(poetry run python scripts/calculate_version.py)" >> $GITHUB_ENV

      - name: Create release (main only)
        id: create_release
        if: github.ref == 'refs/heads/main'
        # using commit hash for version v1.13.0
        uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ env.SPEC_VERSION }}
          commit: ${{  github.sha }}
          artifacts: "fhir-validator.jar,Dockerfile,src/main/resources/manifest.json"
          body: |
            ## Commit message
            ${{ github.event.head_commit.message }}
            ## Info
            [See code diff](${{ github.event.compare }})
            [Release workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            It was initialized by [${{ github.event.sender.login }}](${{ github.event.sender.html_url }})
