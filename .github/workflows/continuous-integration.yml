name: Build

on: push

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # This causes all history to be fetched, which is required for calculate-version to function

      - name: Install Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Update apt repositories
        run: sudo apt update

      - name: Upgrade python packaging tools
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install poetry
        run: pip install poetry

      - name: Cache poetry packages
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-build-cache-poetry-packages-${{ hashFiles('**/poetry.lock') }}

      - name: Install python packages
        run: poetry install

      - name: Lint
        run: make lint

      - name: Build
        run: make build

      - name: Set SPEC_VERSION env var
        run: echo "SPEC_VERSION=$(poetry run python scripts/calculate_version.py)" >> $GITHUB_ENV

      - name: Create release (master only)
        id: create_release
        #if: github.ref == 'refs/heads/master'
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.SPEC_VERSION }}
          release_name: ${{ env.SPEC_VERSION }}
        
      - name: Upload jar release artifact (master only)
        id: upload_jar_release_artifact
        #if: github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./fhir-validator.jar
          asset_name: fhir-validator.jar
          asset_content_type: application/java-archive

      - name: Upload Dockerfile release artifact (master only)
        id: upload_Dockerfile_release_artifact
        #if: github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Dockerfile
          asset_name: Dockerfile
          asset_content_type: text/plain

      - name: Upload manifest release artifact (master only)
        id: upload_manifest_release_artifact
        #if: github.ref == 'refs/heads/master'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/main/resources/manifest.json
          asset_name: manifest.json
          asset_content_type: application/json
