name: quality checks

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This causes all history to be fetched, which is required for calculate-version to function

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
  
      - name: Cache asdf
        uses: actions/cache@v4
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared 

      - name: Install python packages
        run: poetry install

      - name: Lint
        run: make lint

      - name: check licences
        run: make check-licences 

      - name: Run tests, generate coverage, and build
        run: make build

      - uses: actions/upload-artifact@v4
        name: upload build artifact
        with:
          name: packaged_code
          path: |
            fhir-validator.jar

      # - name: Check SONAR_TOKEN
      #   run: |
      #     if [ -z "$SONAR_TOKEN" ]; then
      #       echo "SONAR_TOKEN is not set!"
      #       exit 1
      #     else
      #       echo "SONAR_TOKEN is set."
      #     fi
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # - name: Run tests with debug output
      #   run: mvn clean test jacoco:report -X

      # - name: Run tests with JaCoCo
      #   run: mvn verify -X 
      
      - name: Check for JaCoCo files
        run: |
          echo "Searching for jacoco.exec"
          find . -name jacoco.exec
          echo "Searching for jacoco.xml"
          find . -name jacoco.xml

      - name: Check for JaCoCo Report
        run: cat target/site/jacoco/jacoco.xml || echo "JaCoCo XML reponot found"    
      
      # - name: List target directory
      #   run: |
      #     echo "Listing target directory"
      #     ls -R target
      #     echo "Listing target/site directory (if exists)"
      #     ls -R target/site || echo "target/site does not exist"
      
      # - name: Check test results
      #   run: cat target/surefire-reports/*.txt || echo "No test results found"

      - name: Check Maven test output
        run: cat target/maven-test-output.txt || echo "Maven test output not found"
      
      - name: Check Maven build output
        run: cat target/maven-build-output.txt || echo "Maven build output not found"
      
      - name: Display sonar-project.properties
        run: cat sonar-project.properties || echo "sonar-project.properties not found"
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 


      - name: Check SonarCloud scan results
        run: |
            echo "SonarCloud scan completed. Please check the SonarCloud dashboard for results."
            echo "If coverage data is still missing, please verify the SonarCloud configuration and logs."    
