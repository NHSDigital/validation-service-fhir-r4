name: quality checks

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This causes all history to be fetched, which is required for calculate-version to function

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
  
      - name: Cache asdf
        uses: actions/cache@v4
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@05e0d2ed97b598bfce82fd30daf324ae0c4570e6
        with:
          asdf_branch: v0.11.3
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared 

      - name: Install python packages
        run: poetry install

      - name: Lint
        run: make lint

      - name: check licences
        run: make check-licences 

      - name: Test and Build
        run: make build

      - uses: actions/upload-artifact@v4
        name: upload build artifact
        with:
          name: packaged_code
          path: |
            fhir-validator.jar

      - name: Check SONAR_TOKEN
        run: |
          if [ -z "$SONAR_TOKEN" ]; then
            echo "SONAR_TOKEN is not set!"
            exit 1
          else
            echo "SONAR_TOKEN is set."
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: run unit tests
        run: make test 
        
      - name: list target directory
        run: ls -R target

      - name: dispaly pom
        run: cat pom.xml
      
      - name: Run tests with debug output
        run: mvn clean test jacoco:report -X
      
      - name: search for jacoco files
        run:  find . -name "jacoco*"
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}         
