name: Pull request test and build

on:
  pull_request:
    branches: [main]

env:
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }}

jobs:
  get_asdf_version:
    runs-on: ubuntu-22.04
    outputs:
      asdf_version: ${{ steps.asdf-version.outputs.version }}
      tag_format: ${{ steps.load-config.outputs.TAG_FORMAT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get asdf version
        id: asdf-version
        run: echo "version=$(awk '!/^#/ && NF {print $1; exit}' .tool-versions.asdf)" >> "$GITHUB_OUTPUT"
      - name: Load config value
        id: load-config
        run: |
          TAG_FORMAT=$(yq '.TAG_FORMAT' .github/config/settings.yml)
          echo "TAG_FORMAT=$TAG_FORMAT" >> "$GITHUB_OUTPUT"

  quality_checks:
    uses: NHSDigital/eps-workflow-quality-checks/.github/workflows/quality-checks.yml@4a6d03ad51516eddc448daf454805f85fe2025b9
    needs: [get_asdf_version]
    with:
      asdfVersion: ${{ needs.get_asdf_version.outputs.asdf_version }}
      install_java: true
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pr_title_format_check:
    uses: NHSDigital/eps-workflow-semantic-release/.github/workflows/pr_title_check.yml@f80157cecce288dd175e61b477a1d2dbe9c88b99

  build:
    name: build
    runs-on: ubuntu-22.04
    needs: [get_asdf_version]
    steps:
      - uses: actions/setup-java@v5
        with:
          java-version: '24'
          distribution: 'temurin'
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # This causes all history to be fetched, which is required for calculate-version to function

      # using git commit sha for version of action to ensure we have stable version
      - name: Install asdf
        uses: asdf-vm/actions/setup@1902764435ca0dd2f3388eea723a4f92a4eb8302
        with:
          asdf_version: ${{ needs.get_asdf_version.outputs.asdf_version }}
  
      - name: Cache asdf
        uses: actions/cache@v4
        with:
          path: |
            ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('**/.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-

      - name: Install asdf dependencies in .tool-versions
        uses: asdf-vm/actions/install@1902764435ca0dd2f3388eea723a4f92a4eb8302
        with:
          asdf_version: ${{ needs.get_asdf_version.outputs.asdf_version }}
        env:
          PYTHON_CONFIGURE_OPTS: --enable-shared 

      - name: Install python packages
        run: poetry install

      - name: Run tests, and build (including docker image)
        run: make build
